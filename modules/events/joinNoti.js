 module.exports.config = {
  name: "joinNoti",
  eventType: ["log:subscribe"],
  version: "1.0.1",
  credits: "HƒêGN",//Update by ThanhAli
  description: "Th√¥ng b√°o Bot ho·∫∑c ng∆∞·ªùi d√πng v√†o nh√≥m c√≥ random gif/·∫£nh/video",
  dependencies: {
    "fs-extra": "",
    "path": "",
    "pidusage": ""
  }
};

module.exports.onLoad = function() {
  const { existsSync, mkdirSync } = global.nodemodule["fs-extra"];
  const { join } = global.nodemodule["path"];

  const path = join(__dirname, "cache", "joinGif");
  if (existsSync(path)) mkdirSync(path, { recursive: true });

  const path2 = join(__dirname, "cache", "joinGif");
  if (!existsSync(path2)) mkdirSync(path2, { recursive: true });

  return;
}


module.exports.run = async function({ api, event, Users }) {
   var fullYear = global.client.getTime("fullYear");
  	var getHours = await global.client.getTime("hours");
			var session = `${getHours < 3 ? "ƒë√™m khuya" : getHours < 8 ? "bu·ªïi s√°ng s·ªõm" : getHours < 12 ? "bu·ªïi tr∆∞a" : getHours < 17 ? "bu·ªïi chi·ªÅu" : getHours < 23 ? "bu·ªïi t·ªëi" : "ƒë√™m khuya"}`
  const { join } = global.nodemodule["path"];
  const { threadID } = event;
  let thread = global.data.threadData.get(event.threadID) || {};
  if (typeof thread["join"] == "undefined", thread["join"] == false) return;
  if (event.logMessageData.addedParticipants.some(i => i.userFbId == api.getCurrentUserID())) {
    api.changeNickname(`„Äé ${global.config.PREFIX} „Äè ‚Ä¢ ${(!global.config.BOTNAME) ? "BOT" : global.config.BOTNAME}`, threadID, api.getCurrentUserID());
    const fs = require("fs");
    return api.sendMessage("", event.threadID, () => api.sendMessage({ body: `‚ñ∫ ùóûùóòÃÇÃÅùóß ùó°ùó¢ÃÇÃÅùóú ùóßùóõùóîÃÄùó°ùóõ ùóñùó¢ÃÇùó°ùóö ‚óÑ\n‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n‚Üí [üêß] ùóõùó∂ ùó†ùóºÃ£ùó∂ ùó°ùó¥ùòÇÃõùóºÃõÃÄùó∂ ùó†ùó∂ÃÄùóªùóµ ùóüùóÆÃÄ ùóïùóºùòÅ ùóñùòÇÃâùóÆ ùóïùóÆÃÄùóª ùóßùòÇùóÆÃÇÃÅùóª ùóûùóµùóÆùóªùóµ\n‚Üí [üéÄ] ùó©ùòÇùó∂ ùóüùóºÃÄùóªùó¥ ùóûùóµùóºÃÇùóªùó¥ ùó¶ùóΩùóÆùó∫ , ùóñùóµùòÇÃõÃâùó∂ ùóïùóºùòÅ\n‚Üí [üéä] ùó¶ùòÇÃõÃâ ùóóùòÇÃ£ùóªùó¥ !ùóµùó≤ùóπùóΩ , !ùó∫ùó≤ùóªùòÇ ƒêùó≤ÃÇÃâ ùó´ùó≤ùó∫ ùóñùóµùó∂ ùóßùó∂ùó≤ÃÇÃÅùòÅ ùóüùó≤Ã£ÃÇùóªùóµ ùóñùóºÃÅ ùóßùóøùóºùóªùó¥ ùóïùóºùòÅ\n‚Üí [üå∏] ùó¶ùòÇÃõÃâ ùóóùòÇÃ£ùóªùó¥ !ùó±ùòÇùòÜùó≤ùòÅùóØùóºùòÖ ƒêùó≤ÃÇÃâ ƒêùòÇÃõùóºÃõÃ£ùó∞ ùóîùó±ùó∫ùó∂ùóª ùóóùòÇùòÜùó≤Ã£ÃÇùòÅ\n‚Üí [üíì] ùóñùóµùòÇÃÅùó∞ ùóñùóÆÃÅùó∞ ùóïùóÆÃ£ùóª ùó¶ùóÆÃÄùó∂ ùóïùóºùòÅ ùó©ùòÇùó∂ ùó©ùó≤Ãâ\n‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n‚Üí [üåê] ùó°ùó≤ÃÇÃÅùòÇ ùó†ùòÇùóºÃÇÃÅùóª ùó†ùòÇÃõùóºÃõÃ£ùóª ùóïùóºùòÅ ùóñùóµùóº ùóñùóÆÃÅùó∞ ùóïùóºùòÖ ùóûùóµùóÆÃÅùó∞ ùóßùóµùó∂ÃÄ ùóüùó∂ùó≤ÃÇùóª ùóõùó≤Ã£ÃÇ ùóñùóµùóº ùóîùó±ùó∫ùó∂ùóª ùóïùóºùòÅ: https://www.facebook.com/100090458979503\n‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ`, attachment: fs.createReadStream(__dirname + "/cache/joinMp4/nhoang.mp4") }, threadID));
  }
  else {
    try {
      const { createReadStream, existsSync, mkdirSync, readdirSync } = global.nodemodule["fs-extra"];
      let { threadName, participantIDs } = await api.getThreadInfo(threadID);
      const moment = require("moment-timezone");
      const hours = moment.tz("Asia/Ho_Chi_Minh").format("HH");
      const time = moment.tz("Asia/Ho_Chi_Minh").format("DD/MM/YYYY || HH:mm:ss");
      const threadData = global.data.threadData.get(parseInt(threadID)) || {};
      const path = join(__dirname, "cache", "joinGif", "random");
      const pathGif = join(path, `hi.gif`);
      var mentions = [], nameArray = [], memLength = [], iduser = [], i = 0;

      for (id in event.logMessageData.addedParticipants) {
        const userName = event.logMessageData.addedParticipants[id].fullName; iduser.push(event.logMessageData.addedParticipants[id].userFbId.toString());
        nameArray.push(userName);
        mentions.push({ tag: userName, id: event.senderID });
        memLength.push(participantIDs.length - i++);
        console.log(userName)
      }
      memLength.sort((a, b) => a - b);
      (typeof threadData.customJoin == "undefined") ? msg = "‚Üí Xin ch√†o „Äå {name} „Äçt·ªõi v·ªõi nh√≥m„Äå {threadName} „Äç\n‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n‚Üí Link FACEBOOK: https://www.facebook.com/profile.php?id={iduser}\n‚Üí {type} l√† th√†nh vi√™n th·ª© {soThanhVien} c·ªßa nh√≥m\n‚Üí ƒê∆∞·ª£c th√™m v√†o nh√≥m b·ªüi: {author} \n‚Üí Link FACEBOOK: https://www.facebook.com/profile.php?id={uidAuthor}\n‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n‚Üí Khi V√¥ b·∫°n H√£y D√πng L·ªánh ƒê·ªÉ Xem Lu·∫≠t C·ªßa Box Nh√©\n‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n‚Üí ?rule (tr·ª´ khi QTV set lu·∫≠t th√¨ m·ªõi c√≥ nh√©)\n‚Üí Ch√∫c b·∫°n c√≥ m·ªôt {buoi} vui v·∫ª\n‚Üí Th·ªùi gian: {time}" : msg = threadData.customJoin;
      var nameAuthor = await Users.getNameUser(event.author)
      msg = msg
        .replace(/\{iduser}/g, iduser.join(', '))
        .replace(/\{name}/g, nameArray.join(', '))
        .replace(/\{type}/g, (memLength.length > 1) ? 'C√°c c·∫≠u' : 'C·∫≠u')
        .replace(/\{soThanhVien}/g, memLength.join(', '))
        .replace(/\{threadName}/g, threadName)
        .replace(/\{author}/g, nameAuthor)
        .replace(/\{uidAuthor}/g, event.author)
         .replace(/\{buoi}/g, session)
        .replace(/\{time}/g, time);

      if (existsSync(path)) mkdirSync(path, { recursive: true });

      const randomPath = readdirSync(join(__dirname, "cache", "joinGif", "randomgif"));

      if (existsSync(pathGif)) formPush = { body: msg, attachment: createReadStream(pathGif), mentions }
      else if (randomPath.length != 0) {
        const pathRandom = join(__dirname, "cache", "joinGif", "randomgif", `${randomPath[Math.floor(Math.random() * randomPath.length)]}`);
        formPush = { body: msg, attachment: createReadStream(pathRandom), mentions }
      }
      else formPush = { body: msg, mentions }

      return api.sendMessage(formPush, threadID);
    } catch (e) { return console.log(e) };
  }
  }